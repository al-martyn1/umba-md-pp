# Известные проблемы и TODO

  - [X] проверить, относительно чего считаются пути в опции --add-examples-path - если опция встречается 
        в .options-файле, то относительные пути должны отсчитываться от него
  - [X] по умолчанию в --set-insert-options не стоит опция fail, и проблемы молча съедаются. Может, я давно не обновлял дистр?
  - [X] по умолчанию в --set-insert-options не стоит опция path - неудобно
  - [X] по умолчанию в --set-insert-options не стоит опция filenameLineNo - неудобно
  - [X] сделать тип генерируемого конента - --target-format=rtf, и в этом режиме, если --target-renderer=doxygen, устанавливать
        опцию ProcessingOptions::parse-github-alerts (но её можно установить и ручками). Данная опция должна делать обычный параграф, и вставлять
        слова Note, Tip, Important, Warning, Caution или их локализованные варианты.
        https://docs.github.com/ru/get-started/writing-on-github/getting-started-with-writing-and-formatting-on-github/basic-writing-and-formatting-syntax#alerts
        https://docs.github.com/en/get-started/writing-on-github/getting-started-with-writing-and-formatting-on-github/basic-writing-and-formatting-syntax#alerts
  - [ ] Разобраться, что гитхаб считает как block quote, а что - нет. См. block_quote_test.md. Гитхаб [считает ](https://github.com/al-martyn1/umba-md-pp/blob/main/tests/block_quote_test.md)
        BQ1-BQ3 и следующую бла бла за один блок, BQ4/5/6 - отдельные. Доксиген считает, что первая BQ - это BQ3, и вторая это BQ6. То есть, block quote надо в любом случае
        подшаманивать. В целом, гитхаб считает, что если строка начинается с символа > - это block quote, даже если нет пробела от предыдущего параграфа. Но от последующего 
        надо отделять пустой строкой, иначе он считается как продолжение block quote. Уровень block quote считается по первой строке. Пробелы до и после символов > гитхаб 
        игнорирует, что не скажешь о доксигене. Листинг и хидер брикают блок-квоту.
  - [ ] Сделать события на block quote - первая строчка block quote, просто строчка block quote, конец block quote - в последнем случае будет передаваться 
        фейковая строка, которая не будет добавлятся в документ.
  - [ ] На базе событий block quote запилить обработчик github-alerts
  - [ ] Как работают списки на гитхабе. Сколько бы пробельных символов не было после последнего элемента списка, если далее следует строка того же уровня списка 
        и с тем же маркером, то список продолжается. Прерывается список пустой строкой, за которой следует что-то другое.
        Уровень списка может начинаться с нулевой позиции, не обязательно у верхнего списка делать отступ.
  - [ ] Разобраться, как работают списки в доксигене. Листинг - не прерывает список, а входит элемент списка. Заголовок прерывает. Нумерация в нумерованных списках в доксигене должна возрастать.
  - [ ] Маркеры списка - -/*/+, после них - пробел
  - [ ] Нумерованный список начинается с цифры, затем точка, затем пробел
  - [ ] Сделать разбор текста, и выцепить -abcdef- (sub) и -^abcdef- (sup)
  - [X] Уметь парсить обозначения языков, включая их естественные названия (без учета регистра), превращая их в идентификаторы. По этим идентификаторам
        мы и будем вставлять локализованные Note, Tip, Important, Warning, Caution (будет группа github-alerts).
  - [X] По этому lang-id также будем задавать язык для доксигена
  - [X] Язык документа можно определять по тэгу Language в документе, или новой опцией --document-language=ru, --lang=ru
  - [X] Принудительно переопределяем язык документа опцией --force-document-language=ru, --force-lang=ru
  - [X] если не задан выходной файл, проверяем входной файл. Если начинается на точку, то просто убираем лидирующую точку. Если расширение начинается 
        или заканчивается на '_' - убираем этот символ
  - [X] бага в генерации id для секций под доксиген - вместо подчеркивания появляется символ 0x7F
  - [X] генерация имени файла по имени документа - не забываем, что char у нас знаковый
  - [ ] Надо сканировать ссылки на картинки, и создавать список картинок. Их необходимо копировать в выходной каталог, если он отличается от входного.
  - [ ] При включении документов картинки в нем заданы относительно него, пути к ним надо подправить, чтобы они правильно указывали, так как 
        включаемый файл может находится в другом каталоге.
  - [X] Генерация корректного русского документа доксигеном возможна, только если задан язык - русский. Иначе генерит мусор.
        Надо в дефолтные опции добавить опцию --document-language=russian, чтобы по дефолту нормально генерились русские документы (английские это не испортит).
  - [X] --processing-options=transliterate-generated-filenames надо поместить в дефолтные опции.
  - [ ] Сделать поиск окна ворда с текущим файлов, и закрытие его
  - [X] Надо сделать регистрацию вьювера как обработчика расширений .md, ._md, .md_, .markdown, ._markdown, .markdown_
  - [ ] Похоже, ссылки на разделы документа парсяться неправильно (или не всегда правильно), получается что-то типа `[Общедоступные стайл-гайды](common_style_guides)[Общедоступные стайл-гайды](#)`
  - [ ] В генерируемом оглавлении откуда-то появляются анчоры в фигурных скобках
        `[Общедоступные стайл-гайды [extra.style-guides] {#common_style_guides}](#obshchedostupnye-stayl-gaydy--extra-style-guides----common-style-guides)`
  - [X] При генерации имени временного каталога кроме хэша использовать исходное имя файла, возможно, с какой-то частью пути, чтобы было проще понять, 
        к какому файлу относится этот временный каталог. Сделал без части пути.
  - [ ] Сделать фичу - viewer копирует сгенерированный для просмотра документ в локацию исходного .md/.md_ файла, с тем же именем и расширением rtf. 
        В качестве опции можно задавать имя файла, транслитерированное из заголовка документа
  - [X] Задание входных родных расширений для MDPP через опцию командной строки - 
        сделал опцию `--add-mdpp-extention`/`--add-mdpp-extention` - 
        задаём в дефолтном и/или юзерском конфиге обрабатываемые расширения. Они (и также без подчериваний) используются при регистрации вьювера.

  - **batch-режим**

    - [ ] Сканирование в batch-режиме производится по расширениям, заданным для MDPP опцией `--add-mdpp-extention`/`--add-mdpp-extention`.
    - [ ] Выходные имена файлов (при batch режиме, а также при обычном режиме, если не задано имя выходного файла) формируются на основании
          имени выходного файла путем обрезания ведущих и завершающих символов подчеркивания ('_').
    - [ ] Опция `--batch-exclude-dir`/`--batch-exclude-dirs` - имя/имена каталогов (без пути), которые игнорируются при обходе
          каталогов. Не является маской. Является именем каталога без пути. В стандартной конфигурации совпадает с поддерживаемыми MDPP-расширениями.
          В таких каталогах лежат файла, которые не являются самостоятельными документами, а предназначены только для включения в другие документы.
    - [ ] Опция `--batch-exclude` - маска для исключения файлов из обработки.
    - [ ] Опции `--batch`/`--batch-recurse`/`--rbatch` - сканирование (рекурсивное) каталогов на предмет поиска файлов для обработки.
          Данная опция включает пакетный режим.
    - [ ] Опция `batch-output-root`/`batch-output-root-path` - каталог для выходных файлов пакетного режима, если не задан, используется входной каталог.
          У каждого файла есть относительный путь до корневого каталога сканирования, и он будет применяться при записи файла в выходной каталог,
          если тот задан. Если выходной каталог не задан, результирующий файл будет записан в исходный каталог.

  - **Извлечение фрагментов кода**

    - [ ] Извлечение фрагментов кода: задавать фрагмент не парой строк, а начальной строкой и до парной скобки, т.е. начался фрагмент, 
          каждая '{' увеличивает счетчик, каждая '}' - уменьшает, и когда он возвращается в ноль, фрагмент кода заканчивается. Символы 
          скобок, являющихся блочными маркерами, задавать в описании языка. Если не задано, то значит, такой тип включения нам не доступен.
    - [ ] Извлечение фрагментов кода: задавать стартовую позицию блока номером строки, и маркером, с которого строка должна начинаться.
          Для поиска маркера с определенной позиции, но не раньше. Маркер - как уточнение, в текст/код могут вносится изменения, и номер
          строки "поедет". Доп. маркер позволяет пережить это. Многострочный маркер? Нормализация маркера: табы заменяются пробелами, 
          пробелы сжимаются до одного. Или вообще выкидывать табы и пробелы?
    - [ ] Извлечение фрагментов кода: извлечение кода до разделителя. Стандартно (для C/C++) это строка, начинающаяся c `//---`.
    - [ ] Извлечение фрагментов кода: извлечение кода до N пустых строк.
    - [ ] Извлечение фрагментов кода: откат начала назад по тексту до пустой строки перед фрагментом.
    - [ ] Извлечение фрагментов кода: извлечение прототипа. Задаются допустимые в прототипе типы скобок, задаётся маркер окончания прототипа - ';'. 
          Первые скобки в списке допустимых скобок - основные. Когда счетчик основных скобок доходит до нуля (но при этом все доп. скобки также 
          должны быть по нулям) - считываем пока не встречаем маркер конца прототипа (или дополнительный break-символ, для плюсов это ':'), 
          или не встречаем начало блока.
    - [ ] Извлечение фрагментов кода: сырые маркеры. Многострочный маркер. Нормализованый маркер. Маркер начала и конца отделяются дефисом-минусом.
    - [ ] Извлечение фрагментов кода:

  - [ ] 

