/*! \file
    \brief Autogenerated enumerations (Umba Enum Gen)
 */

#pragma once


#include "marty_cpp/marty_enum.h"

#include <exception>
#include <map>
#include <stdexcept>
#include <string>
#include <unordered_map>



namespace umba{
namespace mdpp{
namespace code{

//#!PrototypeFormatStyle
enum class PrototypeFormatStyle : int
{
    invalid      = -1 /*!< ! */,
    unknown      = -1 /*!< ! */,
    none         = 0x00 /*!< Don't format prototypes */,
    no           = 0x00 /*!< Don't format prototypes */,
    msdn         = 0x01 /*!< Microsoft MSDN style */,
    ms           = 0x01 /*!< Microsoft MSDN style */,
    man          = 0x02 /*!< Linux/Unix man style */,
    linux        = 0x02 /*!< Linux/Unix man style */,
    unix         = 0x02 /*!< Linux/Unix man style */,
    bsd          = 0x02 /*!< Linux/Unix man style */,
    tabMan       = 0x03 /*!< Linux/Unix table man style */,
    tabLinux     = 0x03 /*!< Linux/Unix table man style */,
    tabUnix      = 0x03 /*!< Linux/Unix table man style */,
    tabBsd       = 0x03 /*!< Linux/Unix table man style */,
    tableMan     = 0x03 /*!< Linux/Unix table man style */,
    tableLinux   = 0x03 /*!< Linux/Unix table man style */,
    tableUnix    = 0x03 /*!< Linux/Unix table man style */,
    tableBsd     = 0x03 /*!< Linux/Unix table man style */,
    mdr          = 0x04 /*!< Our own style, close similar to MSDN-style */,
    umba         = 0x04 /*!< Our own style, close similar to MSDN-style */,
    dotnut       = 0x04 /*!< Our own style, close similar to MSDN-style */

}; // enum 
//#!

MARTY_CPP_MAKE_ENUM_IS_FLAGS_FOR_NON_FLAGS_ENUM(PrototypeFormatStyle)

MARTY_CPP_ENUM_CLASS_SERIALIZE_BEGIN( PrototypeFormatStyle, std::map, 1 )
    MARTY_CPP_ENUM_CLASS_SERIALIZE_ITEM( PrototypeFormatStyle::tabMan    , "tab-man" );
    MARTY_CPP_ENUM_CLASS_SERIALIZE_ITEM( PrototypeFormatStyle::invalid   , "invalid" );
    MARTY_CPP_ENUM_CLASS_SERIALIZE_ITEM( PrototypeFormatStyle::msdn      , "msdn"    );
    MARTY_CPP_ENUM_CLASS_SERIALIZE_ITEM( PrototypeFormatStyle::none      , "none"    );
    MARTY_CPP_ENUM_CLASS_SERIALIZE_ITEM( PrototypeFormatStyle::man       , "man"     );
    MARTY_CPP_ENUM_CLASS_SERIALIZE_ITEM( PrototypeFormatStyle::mdr       , "mdr"     );
MARTY_CPP_ENUM_CLASS_SERIALIZE_END( PrototypeFormatStyle, std::map, 1 )

MARTY_CPP_ENUM_CLASS_DESERIALIZE_BEGIN( PrototypeFormatStyle, std::map, 1 )
    MARTY_CPP_ENUM_CLASS_DESERIALIZE_ITEM( PrototypeFormatStyle::tabMan    , "tab-unix"    );
    MARTY_CPP_ENUM_CLASS_DESERIALIZE_ITEM( PrototypeFormatStyle::tabMan    , "tab-man"     );
    MARTY_CPP_ENUM_CLASS_DESERIALIZE_ITEM( PrototypeFormatStyle::tabMan    , "table-bsd"   );
    MARTY_CPP_ENUM_CLASS_DESERIALIZE_ITEM( PrototypeFormatStyle::tabMan    , "tab-linux"   );
    MARTY_CPP_ENUM_CLASS_DESERIALIZE_ITEM( PrototypeFormatStyle::tabMan    , "table-unix"  );
    MARTY_CPP_ENUM_CLASS_DESERIALIZE_ITEM( PrototypeFormatStyle::tabMan    , "table-linux" );
    MARTY_CPP_ENUM_CLASS_DESERIALIZE_ITEM( PrototypeFormatStyle::tabMan    , "tab-bsd"     );
    MARTY_CPP_ENUM_CLASS_DESERIALIZE_ITEM( PrototypeFormatStyle::tabMan    , "table-man"   );
    MARTY_CPP_ENUM_CLASS_DESERIALIZE_ITEM( PrototypeFormatStyle::invalid   , "invalid"     );
    MARTY_CPP_ENUM_CLASS_DESERIALIZE_ITEM( PrototypeFormatStyle::invalid   , "unknown"     );
    MARTY_CPP_ENUM_CLASS_DESERIALIZE_ITEM( PrototypeFormatStyle::msdn      , "msdn"        );
    MARTY_CPP_ENUM_CLASS_DESERIALIZE_ITEM( PrototypeFormatStyle::msdn      , "ms"          );
    MARTY_CPP_ENUM_CLASS_DESERIALIZE_ITEM( PrototypeFormatStyle::none      , "none"        );
    MARTY_CPP_ENUM_CLASS_DESERIALIZE_ITEM( PrototypeFormatStyle::none      , "no"          );
    MARTY_CPP_ENUM_CLASS_DESERIALIZE_ITEM( PrototypeFormatStyle::man       , "man"         );
    MARTY_CPP_ENUM_CLASS_DESERIALIZE_ITEM( PrototypeFormatStyle::man       , "linux"       );
    MARTY_CPP_ENUM_CLASS_DESERIALIZE_ITEM( PrototypeFormatStyle::man       , "unix"        );
    MARTY_CPP_ENUM_CLASS_DESERIALIZE_ITEM( PrototypeFormatStyle::man       , "bsd"         );
    MARTY_CPP_ENUM_CLASS_DESERIALIZE_ITEM( PrototypeFormatStyle::mdr       , "umba"        );
    MARTY_CPP_ENUM_CLASS_DESERIALIZE_ITEM( PrototypeFormatStyle::mdr       , "mdr"         );
    MARTY_CPP_ENUM_CLASS_DESERIALIZE_ITEM( PrototypeFormatStyle::mdr       , "dotnut"      );
MARTY_CPP_ENUM_CLASS_DESERIALIZE_END( PrototypeFormatStyle, std::map, 1 )

} // namespace code
} // namespace mdpp
} // namespace umba

